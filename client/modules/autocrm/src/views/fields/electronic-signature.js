"use strict";var s=Object.defineProperty;var o=(n,i,t)=>i in n?s(n,i,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[i]=t;var a=(n,i,t)=>(o(n,typeof i!="symbol"?i+"":i,t),t);define(["views/fields/base","lib!jsignature"],n=>class extends n{constructor(){super(...arguments);a(this,"detailTemplate","autocrm:fields/electronic-signature/detail");a(this,"editTemplate","autocrm:fields/electronic-signature/edit");a(this,"listTemplate","autocrm:fields/electronic-signature/detail");a(this,"type","electronicSignature");a(this,"$signature",null);a(this,"lockAfterSigning",!0)}setup(){if("lockAfterSigning"in this.params&&(this.lockAfterSigning=this.params.lockAfterSigning),this.lockAfterSigning){const t=()=>{this.model.get(this.name)&&this.setReadOnly(!0),this.stopListening(this.model,"sync",t)};this.listenTo(this.model,"sync",t),t()}}getImageUrlForDetail(){const t=this.model.get(this.name);if(!t)return null;const e=$("<div>");e.jSignature();try{e.jSignature("setData",t)}catch(r){}return e.jSignature("getData")}afterRenderRead(){const t=this.$el.children(".signature-image-container"),e=this.getValueForDisplay();if(!e){t.text(this.translate("No signature"));return}const r=this.$el.children(".dummy-signature-container");r.jSignature("init",{width:t.width()}),r.jSignature("setData",e),$("<img>",{src:r.jSignature("getData"),alt:this.translate("Electronic Signature")}).appendTo(t)}afterRenderEdit(){const t=r=>this.renderUndoButton(r);this.$signature=this.$el.children(".signature-container"),this.$signature.jSignature({UndoButton:function(){return t(this.$controlbarLower)}});const e=this.model.get(this.name);e&&this.$signature.jSignature("setData",e),this.$signature.on("change",()=>this.trigger("change"))}renderUndoButton(t){return $("<button>",{class:"btn btn-default",type:"button"}).text(this.translate("Undo Last Stroke")).css({display:"block",margin:"0 auto"}).appendTo(t)}fetch(){let t=null;return this.$signature&&this.$signature.length&&this.$signature.jSignature("getData","native").length&&(t="data:"+(this.$signature.jSignature("getData","base30")||[]).join(",")),{[this.name]:t}}});
