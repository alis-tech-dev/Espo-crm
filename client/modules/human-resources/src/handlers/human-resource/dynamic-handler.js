"use strict";define(["dynamic-handler"],i=>class extends i{onChangeEducationAndTrainingRecordsRecordList(){const s=Espo.Utils.cloneDeep(this.model.get("educationAndTrainingRecordsRecordList")||[]);for(const e of s){const n=e.dateOfLastInspection,o=e.numberOfYearsForRepetition;if(!n||!o)continue;const t=new Date(n);t.setFullYear(t.getFullYear()+o),e.dateOfTheNextInspection=t.toISOString().split("T")[0]}setTimeout(()=>{this.model.set("educationAndTrainingRecordsRecordList",s)},0)}onChangeMedicalExaminationsRecordList(){const s=Espo.Utils.cloneDeep(this.model.get("medicalExaminationsRecordList")||[]);for(const e of s){const n=e.dateOfLastInspection,o=e.numberOfYearsForRepetition;if(!n||!o)continue;const t=new Date(n);t.setFullYear(t.getFullYear()+o),e.dateOfTheNextInspection=t.toISOString().split("T")[0]}setTimeout(()=>{this.model.set("medicalExaminationsRecordList",s)},0)}onChangeOtherEventsRecordList(){const s=Espo.Utils.cloneDeep(this.model.get("otherEventsRecordList")||[]);for(const e of s){const n=e.dateOfLastInspection,o=e.numberOfYearsForRepetition;if(!n||!o)continue;const t=new Date(n);t.setFullYear(t.getFullYear()+o),e.dateOfTheNextInspection=t.toISOString().split("T")[0]}setTimeout(()=>{this.model.set("otherEventsRecordList",s)},0)}});
